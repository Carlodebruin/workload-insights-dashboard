// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(cuid())
  phone_number String @unique
  name         String
  role         String
  activities   Activity[]
  updates      ActivityUpdate[]
  assignedActivities Activity[] @relation("AssignedTo")
  whatsappUsers WhatsAppUser[] // Relation to WhatsApp users

  // Indexes for performance optimization
  @@index([role], name: "idx_user_role")
  @@index([phone_number], name: "idx_user_phone")
  @@map("users")
}

model Category {
  id         String @id @default(cuid())
  name       String
  isSystem   Boolean @default(false)
  activities Activity[]

  // Indexes for performance optimization
  @@index([name], name: "idx_category_name")
  @@index([isSystem], name: "idx_category_system")
  @@map("categories")
}

model Activity {
  id           String @id @default(cuid())
  user_id      String
  category_id  String
  subcategory  String
  location     String
  timestamp    DateTime @default(now())
  notes        String?
  photo_url    String?
  latitude     Float?
  longitude    Float?
  status       String @default("Unassigned")
  assigned_to_user_id String?
  assignment_instructions String?
  resolution_notes String?

  user         User @relation(fields: [user_id], references: [id])
  category     Category @relation(fields: [category_id], references: [id])
  assignedTo   User? @relation("AssignedTo", fields: [assigned_to_user_id], references: [id])
  updates      ActivityUpdate[]
  whatsappMessages WhatsAppMessage[] // Relation to WhatsApp messages

  // Indexes for performance optimization
  @@index([user_id], name: "idx_activity_user")
  @@index([category_id], name: "idx_activity_category")
  @@index([timestamp], name: "idx_activity_timestamp")
  @@index([status], name: "idx_activity_status")
  @@index([assigned_to_user_id], name: "idx_activity_assigned")
  @@index([subcategory], name: "idx_activity_subcategory")
  @@index([location], name: "idx_activity_location")
  // Composite indexes for common query patterns
  @@index([user_id, timestamp], name: "idx_activity_user_time")
  @@index([category_id, timestamp], name: "idx_activity_category_time")
  @@index([status, timestamp], name: "idx_activity_status_time")
  @@index([timestamp, status], name: "idx_activity_time_status")
  // Geographic indexing for location-based queries
  @@index([latitude, longitude], name: "idx_activity_coordinates")
  @@map("activities")
}

model ActivityUpdate {
  id          String @id @default(cuid())
  activity_id String
  timestamp   DateTime @default(now())
  notes       String
  photo_url   String?
  author_id   String

  activity Activity @relation(fields: [activity_id], references: [id], onDelete: Cascade)
  author   User @relation(fields: [author_id], references: [id])

  // Indexes for performance optimization
  @@index([activity_id], name: "idx_update_activity")
  @@index([author_id], name: "idx_update_author")
  @@index([timestamp], name: "idx_update_timestamp")
  // Composite indexes for common query patterns
  @@index([activity_id, timestamp], name: "idx_update_activity_time")
  @@index([author_id, timestamp], name: "idx_update_author_time")
  @@map("activity_updates")
}